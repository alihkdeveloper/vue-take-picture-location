{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<select name=\\\"\\\" id=\\\"micSelect\\\"></select><select id=\\\"visSelect\\\"><option value=\\\"frequencybars\\\">Bar</option><option value=\\\"sinewave\\\">Wave</option><option value=\\\"circle\\\">Circle</option></select><a id=\\\"download\\\">Download</a><div class=\\\"audio-controls\\\"><button id=\\\"record\\\">Record</button><button id=\\\"stop\\\">Stop</button><audio id=\\\"audio\\\" controls></audio></div><div id=\\\"msg\\\">Recording...</div><canvas width=\\\"500\\\" height=\\\"300\\\"></canvas>\", 6);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _hoisted_1;\n}","map":{"version":3,"names":["_hoisted_1"],"sources":["D:\\Project\\Nerd_herd\\accounting\\accounting\\src\\components\\RecordVoice.vue"],"sourcesContent":["<template>\r\n\t<select name=\"\" id=\"micSelect\"></select>\r\n\r\n\t<select id=\"visSelect\">\r\n\t\t<option value=\"frequencybars\">Bar</option>\r\n\t\t<option value=\"sinewave\">Wave</option>\r\n\t\t<option value=\"circle\">Circle</option>\r\n\t</select>\r\n\r\n\t<a id=\"download\">Download</a>\r\n\r\n\t<div class=\"audio-controls\">\r\n\t\t<button id=\"record\">Record</button>\r\n\t\t<button id=\"stop\">Stop</button>\r\n\t\t<audio id=\"audio\" controls></audio>\r\n\t</div>\r\n\r\n\t<div id=\"msg\">Recording...</div>\r\n\t<canvas width=\"500\" height=\"300\"></canvas>\r\n</template>\r\n\r\n<script>\r\nimport recorder from \"vue-audio-recorder-and-player\";\r\n\r\nexport default {\r\n\tdata() {\r\n\t\treturn {};\r\n\t},\r\n\tcomponents: {recorder},\r\n\tmethods: {\r\n\t\tasync recordingStopped(blob) {\r\n\t\t\tconst readBlobAsBase64 = (blob) => {\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treturn new Promise((resolve) => {\r\n\t\t\t\t\treader.addEventListener(\"load\", function () {\r\n\t\t\t\t\t\tresolve(reader.result);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treader.readAsDataURL(blob);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\ttry {\r\n\t\t\t\tthis.audioURL = await readBlobAsBase64(blob);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e.message);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"here\", this.audioURL); // Audio blob as base 64 string\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n"],"mappings":";;;SACCA,UAAwC"},"metadata":{},"sourceType":"module","externalDependencies":[]}